type feed {
  feed_id: String
  feed_publisher_name: String
  feed_publisher_url: String
  feed_lang: String
  feed_version: String
  routes(route_id: [String]): [route]
  route_count: Long
  stops: [stop]
  stop_count: Long
}

# GeoJSON
scalar GeoJSON

# Long type
scalar Long

type pattern {
  pattern_id: String
  name: String
  route_id: String
  stops: [stop]
  stop_count: Long
  geometry: GeoJSON
  trips(begin_time: Long, end_time: Long): [trip]
  trip_count: Long
}

type Query {
  routes(agency_key: [String], route_id: [String]): [route]
  stops(feed_id: [String], stop_id: [String], lat: Float, lon: Float, radius: Float, max_lat: Float, max_lon: Float, min_lat: Float, min_lon: Float): [stop]
  feeds(feed_id: [String]): [feed]
  patterns(pattern_id: [String]): [pattern]
  trips(trip_id: [String], route_id: [String]): [trip]
  stopTimes(stop_id: [String], trip_id: [String]): [stopTime]
}

type route {
  route_id: String
  route_short_name: String
  route_long_name: String
  route_desc: String
  route_url: String
  route_color: String
  route_text_color: String
  trips: [trip]
  trip_count: Long
  patterns(stop_id: [String]): [pattern]
  pattern_count: Long
  stats(date: String, from: Long, to: Long): stats
}

type stats {
  headway: Float
}

type stop {
  stop_id: String
  stop_name: String
  stop_code: String
  stop_desc: String
  stop_lon: Float
  stop_lat: Float
  zone_id: String
  stop_url: String
  stop_timezone: String
  stop_times(date: String, from: Long, to: Long): [stopTime]
  routes(route_id: [String]): [route]
  stats(date: String, from: Long, to: Long): stats
  transferPerformance(date: String, from: Long, to: Long): [transferPerformance]
}

type stopTime {
  arrival_time: Int
  departure_time: Int
  stop_sequence: Int
  stop_id: String
  stop_headsign: String
  shape_dist_traveled: Float
  trip(date: String, from: Long, to: Long): trip
}

type transferPerformance {
  fromRoute: String
  toRoute: String
  bestCase: Int
  worstCase: Int
  typicalCase: Int
}

type trip {
  trip_id: String
  trip_headsign: String
  trip_short_name: String
  block_id: String
  direction_id: Int
  route_id: String
  pattern: pattern
  stop_times(stop_id: [String]): [stopTime]
  start_time: Int
  duration: Int
}